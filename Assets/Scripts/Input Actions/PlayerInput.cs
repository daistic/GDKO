//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Input Actions/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""2b80ceaa-2059-4ac3-8c34-3259f803a9d6"",
            ""actions"": [
                {
                    ""name"": ""SpaceButton"",
                    ""type"": ""Button"",
                    ""id"": ""6c9ccd32-9a37-44c3-b786-e2c1a60527d4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RArrowKey"",
                    ""type"": ""Button"",
                    ""id"": ""6c850dd1-dc86-4340-b2c1-1f6b69c5f7dc"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LArrowKey"",
                    ""type"": ""Button"",
                    ""id"": ""27a8dcbe-d18d-47e0-987f-85c9452a0375"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UArrowKey"",
                    ""type"": ""Button"",
                    ""id"": ""fa512e09-3b23-4d2e-812c-77459c549b02"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QKey"",
                    ""type"": ""Button"",
                    ""id"": ""05aabbb1-47e2-47b4-9f43-61bc221eea39"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZKey"",
                    ""type"": ""Button"",
                    ""id"": ""fb4f4578-2a8f-4f2c-9c9e-786534d02fbe"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""955952b1-983a-420a-abac-88b2c279db1a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cd8d57d3-7f37-49fd-9d0c-9d688c9f986f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpaceButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6c466ae-164f-4677-8260-5ad8b7beadcc"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RArrowKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""690b927a-8c0e-496b-8301-7406e41b950d"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LArrowKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccb7bb98-c9ec-4651-b0fc-3d59c1206b91"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UArrowKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eea77046-46a4-4844-9af7-437d1b658d1f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce80bb37-5d7e-46e8-b284-461bfdd2f280"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52a1bfee-2fb0-4386-ba9c-bfea855d291c"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_SpaceButton = m_Player.FindAction("SpaceButton", throwIfNotFound: true);
        m_Player_RArrowKey = m_Player.FindAction("RArrowKey", throwIfNotFound: true);
        m_Player_LArrowKey = m_Player.FindAction("LArrowKey", throwIfNotFound: true);
        m_Player_UArrowKey = m_Player.FindAction("UArrowKey", throwIfNotFound: true);
        m_Player_QKey = m_Player.FindAction("QKey", throwIfNotFound: true);
        m_Player_ZKey = m_Player.FindAction("ZKey", throwIfNotFound: true);
        m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
    }

    ~@PlayerInput()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, PlayerInput.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_SpaceButton;
    private readonly InputAction m_Player_RArrowKey;
    private readonly InputAction m_Player_LArrowKey;
    private readonly InputAction m_Player_UArrowKey;
    private readonly InputAction m_Player_QKey;
    private readonly InputAction m_Player_ZKey;
    private readonly InputAction m_Player_Shoot;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpaceButton => m_Wrapper.m_Player_SpaceButton;
        public InputAction @RArrowKey => m_Wrapper.m_Player_RArrowKey;
        public InputAction @LArrowKey => m_Wrapper.m_Player_LArrowKey;
        public InputAction @UArrowKey => m_Wrapper.m_Player_UArrowKey;
        public InputAction @QKey => m_Wrapper.m_Player_QKey;
        public InputAction @ZKey => m_Wrapper.m_Player_ZKey;
        public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @SpaceButton.started += instance.OnSpaceButton;
            @SpaceButton.performed += instance.OnSpaceButton;
            @SpaceButton.canceled += instance.OnSpaceButton;
            @RArrowKey.started += instance.OnRArrowKey;
            @RArrowKey.performed += instance.OnRArrowKey;
            @RArrowKey.canceled += instance.OnRArrowKey;
            @LArrowKey.started += instance.OnLArrowKey;
            @LArrowKey.performed += instance.OnLArrowKey;
            @LArrowKey.canceled += instance.OnLArrowKey;
            @UArrowKey.started += instance.OnUArrowKey;
            @UArrowKey.performed += instance.OnUArrowKey;
            @UArrowKey.canceled += instance.OnUArrowKey;
            @QKey.started += instance.OnQKey;
            @QKey.performed += instance.OnQKey;
            @QKey.canceled += instance.OnQKey;
            @ZKey.started += instance.OnZKey;
            @ZKey.performed += instance.OnZKey;
            @ZKey.canceled += instance.OnZKey;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @SpaceButton.started -= instance.OnSpaceButton;
            @SpaceButton.performed -= instance.OnSpaceButton;
            @SpaceButton.canceled -= instance.OnSpaceButton;
            @RArrowKey.started -= instance.OnRArrowKey;
            @RArrowKey.performed -= instance.OnRArrowKey;
            @RArrowKey.canceled -= instance.OnRArrowKey;
            @LArrowKey.started -= instance.OnLArrowKey;
            @LArrowKey.performed -= instance.OnLArrowKey;
            @LArrowKey.canceled -= instance.OnLArrowKey;
            @UArrowKey.started -= instance.OnUArrowKey;
            @UArrowKey.performed -= instance.OnUArrowKey;
            @UArrowKey.canceled -= instance.OnUArrowKey;
            @QKey.started -= instance.OnQKey;
            @QKey.performed -= instance.OnQKey;
            @QKey.canceled -= instance.OnQKey;
            @ZKey.started -= instance.OnZKey;
            @ZKey.performed -= instance.OnZKey;
            @ZKey.canceled -= instance.OnZKey;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnSpaceButton(InputAction.CallbackContext context);
        void OnRArrowKey(InputAction.CallbackContext context);
        void OnLArrowKey(InputAction.CallbackContext context);
        void OnUArrowKey(InputAction.CallbackContext context);
        void OnQKey(InputAction.CallbackContext context);
        void OnZKey(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
